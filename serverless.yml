
service: serverless-perhap

provider:
  name: aws
  runtime: python2.7
  stage: dev
  region: us-west-2
  environment:
    PerhapEvents: Perhap-Events
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: ["arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/Perhap-Events", "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/Perhap-Events/*"]

functions:
  get-domain:
    handler: get-handler.domain
    events:
      - http:
          method: get
          path: events/{realm}/{domain}
  get-events:
    handler: get-handler.get_event
    events:
      - http:
          method: get
          path: events/{realm}/{domain}/{entity}
  new-event:
    handler: post-handler.new_event
    events:
      - http:
          method: post
          path: events/{realm}/{domain}/{entity}/{event-type}


resources:
  Resources:
    DynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "Realm"
            AttributeType: "S"
          -
            AttributeName: "RangeId"
            AttributeType: "S"
          # -
          #   AttributeName: "Domain"
          #   AttributeType: "S"
          # -
          #   AttributeName: "Entity"
          #   AttributeType: "S"
          # -
          #   AttributeName: "EventType"
          #   AttributeType: "S"
          -
            AttributeName: "EventId"
            AttributeType: "S"
          # -
          #   AttributeName: "EventData"
          #   AttributeType: "M"
        KeySchema:
          -
            AttributeName: "Realm"
            KeyType: "HASH"
          -
            AttributeName: "RangeId"
            KeyType: "RANGE"
        ProvisionedThroughput:
          ReadCapacityUnits: "10"
          WriteCapacityUnits: "50"
        LocalSecondaryIndexes:
        -
          IndexName: "event-id"
          KeySchema:
            -
              AttributeName: "Realm"
              KeyType: "HASH"
            -
              AttributeName: "EventId"
              KeyType: "RANGE"
          Projection:
            ProjectionType: ALL

        TableName: ${self:provider.environment.PerhapEvents}
    # Kinesis:
    #   Type: "AWS::Kinesis::Stream"
    #   Properties:
    #     Name: Perhap-Kinesis
    #     ShardCount: 1
